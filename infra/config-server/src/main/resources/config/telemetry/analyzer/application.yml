spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/analyzer-db
    username: analyzer
    password: analyzer
jpa:
  properties:
    hibernate:
      dialect=org:
        hibernate:
          dialect:
            PostgreSQLDialect:
analyzer:
  kafka:
    hub-consumer-properties:
      "bootstrap.servers": localhost:9092
      "group.id": analyzer-hub-group
      "key.deserializer": org.apache.kafka.common.serialization.StringDeserializer
      "value.deserializer": ru.yandex.practicum.util.HubEventDeserializer
    snapshot-consumer-properties:
      "bootstrap.servers": localhost:9092
      "group.id": analyzer-snapshot-group
      "key.deserializer": org.apache.kafka.common.serialization.StringDeserializer
      "value.deserializer": ru.yandex.practicum.util.SensorSnapshotDeserializer
    topics:
      hubs-events: telemetry.hubs.v1
      sensors-snapshot: telemetry.snapshots.v1
grpc:
  client:
    router:
      address: 'discovery:///hub-router'
      enable-keep-alive: true
      keep-alive-without-calls: true
      negotiation-type: plaintext
